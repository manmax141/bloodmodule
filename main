-- Also im not writing a new code because of some kid hacker that removed everybody's roles
-- idk if possible but if you can check old applications you will find a modeler application aswell if you can put that in regards and give me the modeler roles too

-- // Variables \\
local Players = game:GetService("Players")
local DS = game:GetService("DataStoreService"):GetDataStore("Cursed Fate")
local RS =  game:GetService("ReplicatedStorage")
local ServerStorage = game:GetService("ServerStorage")
local Data = ServerStorage.PlayerData

local Remotes = RS.Remotes
local Assets = RS.Assets
local Outfits = Assets.Outfits
local StudentCard, ChangeGender = Remotes.StudentCard, Remotes.ChangeGender

-- // Functions \\

function GetData(DataName, Player)
	local success, data = pcall(function()
		return DS:GetAsync(DataName.."/"..Player.UserId)
	end)

	return success and data
end

function SetData(DataPiece, Player)
	local success, err = pcall(function()
		return DS:SetAsync(DataPiece.Name.."/"..Player.UserId, DataPiece.Value)
	end)
	if not success then
		warn(err)
	end
end

function CreateWeldConstraint(Part0: BasePart, Part1: BasePart) : ( WeldConstraint? , string? )
	if not Part0 or not Part1 then return warn("part0 or part1 not found") end
	
	local WeldConstraint = Instance.new("WeldConstraint")
	WeldConstraint.Parent = Part0
	WeldConstraint.Part0 = Part0
	WeldConstraint.Part1 = Part1
	
	return WeldConstraint
end

function CharacterAdded(Character)
	local Player = Players:GetPlayerFromCharacter(Character)
	local PlayerData = Player.PlayerData
	
	if PlayerData.Gender.Value == "" then
		Character:SetAttribute("Stun", true)
		task.wait(2)
		StudentCard:FireClient(Player)
	else
		
		local Outfit = Outfits[PlayerData.Gender.Value.." Outfit"]:Clone()
		Outfit.Parent = Character
		
		if not Outfit.PrimaryPart then
			warn("Outfit primary part not found, some bugs might occur!")
		end
		
		Outfit:PivotTo(Character:GetPivot())
		
		for _, OutfitPiece in pairs(Outfit:GetChildren()) do
			if Character:FindFirstChild(OutfitPiece.Name) then
				CreateWeldConstraint(Character:FindFirstChild(OutfitPiece.Name), OutfitPiece)
			end
		end
		
	end
end

function PlayerAdded(Player)	
	local PlayerData = Data:Clone()
	PlayerData.Parent = Player
	
	for _, DataPiece in pairs(PlayerData:GetDescendants()) do
		if DataPiece:IsA("ValueBase") then
			
			local data = GetData(DataPiece.Name, Player)
			DataPiece.Value = data or DataPiece.Value
			
		end
	end
		
	Player.CharacterAdded:Connect(CharacterAdded)
end

function PlayerRemoving(Player)
	local PlayerData = Player:WaitForChild("PlayerData")
	
	for _, DataPiece in pairs(PlayerData:GetDescendants()) do
		if DataPiece:IsA("ValueBase") then
			
		 	SetData(DataPiece, Player)
		end
	end
	
end

function ChangeGenderEvent(Player, NewGender: string)
	if not NewGender then return warn("error gender not found!") end
	if NewGender ~= "Male" and NewGender ~= "Female" then return warn("unknown gender!") end
	
	Player.PlayerData.Gender.Value = NewGender
	Player:LoadCharacter()
end

-- // Events \\

ChangeGender.OnServerEvent:Connect(ChangeGenderEvent)
Players.PlayerAdded:Connect(PlayerAdded)
Players.PlayerRemoving:Connect(PlayerRemoving)
