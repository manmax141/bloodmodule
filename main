-- // Variables \\
local RunService = game:GetService("RunService")
local RepStorage = game:GetService("ReplicatedStorage")
local Modules = RepStorage:WaitForChild("Modules")
local Functions = require(Modules:WaitForChild("Functions")) -- this is my module i wont show code for it cuz im lazy to explain it aswell
local IsClient = RunService.IsClient
local Players = game:GetService("Players")
local Remotes = RepStorage:WaitForChild("Remotes")
local SkillRemote = Remotes:WaitForChild("Skill")
local Lightning = game:GetService("Lighting")
local Chat = game:GetService("Chat")

local TS = game:GetService("TweenService")
local Skill = {
	Time = 60,
} -- some table for organization

-- // Functions \\

function Skill.StartEffect(Player: Player, SkillArgs: {MainPlayer: Player, CurrentPlayer: Player, MouseCF: CFrame})	 -- client sided which is effect only
	local Character = Player.Character or Player.CharacterAdded:Wait()
	local FunctioningCharacter = Functions.CreateTarget(Player, Character)
	local HRP = Character:WaitForChild("HumanoidRootPart")
	local HUM = Character:WaitForChild("Humanoid")
	local Arm = Character:WaitForChild("Left Arm")

	if FunctioningCharacter:GetCancel() or FunctioningCharacter:GetStun() then return end
	if Character:GetAttribute("InDomain") then return end

	local SkillCache = Functions.new(script.Parent.Name, Character)
	SkillCache:PlayAnimation("DomainOpen") -- basically plays an animation using character.humanoid:loadanimation
	
	FunctioningCharacter:Stun(true, 5, {
		["AutoRotate"] = {Default = true, Value = false}
	}) -- adds an attribute to the player 
	FunctioningCharacter:StunVelocity(true, 5) -- stun player using bodyvelocity
	
	task.spawn(function()
		Chat:Chat(Character, "Through-out heaven and earth...")
		task.wait(1)
		Chat:Chat(Character, "...I Alone am the honored one.")
	end) -- contain no yield for some chat messages
	
	if SkillArgs.CurrentPlayer == Player then -- currentplayer is changed (fireallclients player)
		local B1Effect = SkillCache:CreateEffect("B1", HRP.CFrame, Skill.Time) -- create an effect called b1 stored in repstorage
		B1Effect.Effect.CanCollide = false
		B1Effect.Effect.B2.CanCollide = false
		
		local Connection
		Connection = RunService.RenderStepped:Connect(function()
			task.spawn(function()
				for _, Child in pairs(workspace.Effects:GetChildren()) do -- loop through effects
					if Child.Name == "B1" and Child ~= B1Effect.Effect then -- remove any b1's
						Child.Transparency = 1
						Child.B2.Transparency = 1
						-- remove them but not completely only make them transparent
					end
				end
			end)
		end)
		
		local Particle : ParticleEmitter = B1Effect.Effect.FadeInEffect
		Particle.Enabled = true

		for i = 0, 1, 0.1 do task.wait(.15)
			Particle.ShapePartial = i -- some round shape effect for the particle
		end

		Particle.Enabled = false -- make it not show
		
		SkillCache:PlayAnimation("Domain") -- play an animation easy
		
		local Sky = RepStorage.Assets.Gojo.Effects["Space Sky"]:Clone() -- clone it so you dont get it replaced completely
		Sky.Parent = Lightning -- replacing sky

		local CurrentSky = Lightning:FindFirstChild("Sky")
		CurrentSky.Parent = game -- storing current sky

		local TransparentParts = {}
		
		for _, Part in pairs(workspace.Buildings:GetDescendants()) do -- loop through buildings
			if Part:IsA("BasePart") and Part.Transparency == 0 then
				Part.Transparency = 1 -- make them transparent
				if Part:FindFirstChildOfClass("Texture") then
					Part:FindFirstChildOfClass("Texture").Transparency = 1 -- same for building textures (to fix bugs)
					table.insert(TransparentParts, Part:FindFirstChildOfClass("Texture"))
				end
				table.insert(TransparentParts, Part)
			end
		end
				
		local Connection
		local StartShaking = true
		Connection = RunService.RenderStepped:Connect(function() -- fast loop (client loop only)
			if not StartShaking then
				return Connection:Disconnect() -- disconnect the loop
			end
			Functions.ShakeCamera("Bump") -- uses "EZ Camera Shaker"
		end)

		SkillCache:CreateEffect("Sticks", HRP.CFrame*CFrame.Angles(0,0,0)*CFrame.new(0,0,35), 3.35) -- create some effect

		local PlayerGui = Player.PlayerGui -- get player gui
		local WhiteScreen = PlayerGui.WhiteScreen.Frame -- a white screen gui

		WhiteScreen.Visible = true -- show it
		WhiteScreen.BackgroundTransparency = 1 -- make it transparent so we can make it fade in instead of instantly show in
		
		task.wait(3.5)

		TS:Create(Lightning.Bloom, TweenInfo.new(1,Enum.EasingStyle.Cubic),{Threshold = 0}):Play() -- some good effect for the white screen fade in

		task.wait(.5)
		
		TS:Create(WhiteScreen,TweenInfo.new(2,Enum.EasingStyle.Sine),{BackgroundTransparency = 0}):Play() -- white screen fade in (the actual ui)

		StartShaking = false -- when we set this to fasle the loop up there disables

		task.wait(3)
		
		for _, NPCCharacter in pairs(workspace.NPCs:GetChildren()) do -- looping through npcs
			if NPCCharacter:GetAttribute("InDomain") ~= SkillArgs.MainPlayer.Name then -- if its in other domain than the player's or not in any
				local OldParent = NPCCharacter.Parent

				NPCCharacter.Parent = game.ReplicatedStorage -- so they dont show to you (this is client only)
				task.delay(Skill.Time, function()
					NPCCharacter.Parent = OldParent
				end)
			end
		end 

		for _, Character in pairs(workspace.Characters:GetChildren()) do -- loop through characters and do the same thing
			if Character:GetAttribute("InDomain") ~= SkillArgs.MainPlayer.Name then

				local OldParent = Character.Parent

				Character.Parent = game.ReplicatedStorage
				task.delay(Skill.Time, function()
					Character.Parent = OldParent
				end)
			end
		end 

		
		--SkillCache:PlayAnimation("Domain")

		WhiteScreen.Visible = false -- remove whitescreen and make everything back to normal
		WhiteScreen.BackgroundTransparency = 1
		Lightning.Bloom.Threshold = 1.5

		task.wait(Skill.Time - (4 + .5 + 3.5 + .66)) -- making time a little acurate here

		for _, Part in pairs(TransparentParts) do
			Part.Transparency = 0 -- make everything non transparent again
		end

		Sky:Destroy()
		CurrentSky.Parent = Lightning -- get cached sky back to normal
	end
end

function Skill.Start(Player: Player, SkillArgs: {MouseCF: CFrame}) -- serverside hitboxes etc
	local Character = Player.Character or Player.CharacterAdded:Wait()
	local FunctioningCharacter = Functions.CreateTarget(Player, Character)

	local HRP = Character:WaitForChild("HumanoidRootPart")
	local Arm = Character:WaitForChild("Left Arm")

	if FunctioningCharacter:GetStun() or FunctioningCharacter:GetCancel() then return end -- getstun and getcancel is for some attributes so you dont use abilities when ur stunned
	if Character:GetAttribute("InDomain") then return end -- so u cant use it when ur in domain
	
	FunctioningCharacter:Stun(true, 5) -- stun again but serversided
	
	Character:SetAttribute("InDomain", Player.Name) -- setting the player domain to itself
	task.delay(Skill.Time+5, function()
		Character:SetAttribute("InDomain", false) -- removing it after sometime
	end)
	
	local SkillCache = Functions.new(script.Parent.Name, Character)
	task.delay(.15, function()
		local B1Effect = SkillCache:CreateEffect("B1", HRP.CFrame, Skill.Time) -- i already explained this
		B1Effect.Effect.Transparency = 0
		B1Effect.Effect.B2.Transparency = 0

		local Connection
		Connection = RunService.Heartbeat:Connect(function()
			if not B1Effect.Effect then
				return Connection:Disconnect()
			end
			TS:Create(B1Effect.Effect,TweenInfo.new(.35,Enum.EasingStyle.Sine),{CFrame = B1Effect.Effect.CFrame * CFrame.fromEulerAnglesXYZ(0,.55,0)}):Play() -- rotation effect
		end)
	end)
	
	Functions.CreateHitbox("AOE", Character, Vector3.new(88.876, 91.155, 91.155), HRP.CFrame, function(Target, Bl, FunctioningTarget)
		local HitPlayer = Players:GetPlayerFromCharacter(Target)
		if HitPlayer then
			SkillRemote:FireClient({
				Name = script.Name,
				Player = HitPlayer,
				IsSkillSet = true,
				SetName = script.Parent.Name, -- skil set naem which is "Gojo"
				Args = {
					MainPlayer = Player
				}
			}) -- this creates the effect for players hit too (cliently)
		end
		
		Target:SetAttribute("InDomain", Player.Name) -- set the player to the same domain aswell
		task.delay(Skill.Time+5, function()
			Target:SetAttribute("InDomain", false)
		end)
		
		FunctioningTarget:Stun(true, Skill.Time, {
			AutoRotate = {Default = true, Value = false},
			WalkSpeed = {Default = 16, Value = 0},
			JumpPower = {Default = 50, Value = 0}
		}) -- stunning the target for the whole time
	end)

end

return Skill -- return the module table so it can be used
