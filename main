-- if u want to make sure im the scripter of the game
-- u will find in game description scripter is HazemBnGamed with spaces because roblox tags
-- same as 0064 its my discord tag Emperor mad#0359 but roblox tags says its inappropriate description that i cant use
-- how to use : 
--- first arg Target u choose the target that must bleed (player/npc etc)
-- second arg segements i think everyone know this
-- third arg is the blood drop unit for blood floor to spawn

-- example:
--local BloodModule = require(game:GetService("ReplicatedStorage").BloodModule)
	--BloodModule:BloodDrop({
		--Target = Target,
		--Segements = 9,
		--Unit = .35,
		
	--})
local module = {}
local ts = require(game:GetService("ReplicatedStorage").Tween) - another module i made

local destroyTime = 6
local destroyTime2 = 5
local db = true

local ingore = {}


local bloodDrops = {}

local function Cast(Origin, Direction)

		local raycastParams = RaycastParams.new() -- create a raycast params
		raycastParams.FilterDescendantsInstances = ingore -- add ingore table to blacklist so doesnt cast the blacklist things
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist -- enable the blacklist
		local Hit = workspace:Raycast(Origin, Direction, raycastParams) 

		if Hit ~= nil then
			if Hit.Instance:IsA("BasePart") and Hit.Instance.CanCollide == true then -- if hit is a collidable part
				if Hit.Instance:FindFirstAncestorWhichIsA("Model"):FindFirstChildOfClass("Humanoid")  then print(Hit.Instance.Parent.Name) return end
				return Hit.Instance, Hit.Position, Hit.Normal -- return the hit
			end
		end
	
end



function bloodDrops.addDrops(self)
	self.Segements = self.Segements or 5 -- get the segements u choose in args or start with 5 instead
		
	local loops = {
		
		Loop = true,
		
	}
	
	self.loop1 = loops.Loop
	
	

		for i = 1, self.Segements do wait()

			local bloodDrop = script:WaitForChild("BloodDrop"):Clone() -- clone the blooddrop part (only found in the real script because its inside it)
			local HRP = self.Target:WaitForChild("HumanoidRootPart") 
			self.BloodColor = self.BloodColor or Color3.fromRGB(77, 0, 0) -- set blood color
			bloodDrop.Parent = workspace -- set it to workspace to show
			game.Debris:AddItem(bloodDrop,4) -- despawn / remove it after 4 seconds
			bloodDrop.CFrame = HRP.CFrame * CFrame.Angles(math.random(-20,20),math.random(-20,20),math.random(-20,20)) -- set its angle
			bloodDrop.Anchored = false -- make it fall
			bloodDrop.CanCollide = false -- and not collide
			bloodDrop.Color = self.BloodColor se its color
			local Velocity = Instance.new("BodyVelocity") -- create its velocity to have a jump animation
			Velocity.Parent = bloodDrop
			Velocity.Name = "BloodVelocity"
			Velocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			Velocity.Velocity = bloodDrop.CFrame.UpVector * 45 -- create its velocity cframe
			game.Debris:AddItem(Velocity, .15) -- despawna after 0.15 secs

			self.destroy = function() -- destroy function
				spawn(function()

					wait(self.destroyTime or 3)
					if self ~= nil then

						bloodDrop:Destroy()
					else

						warn("Blood Drop is nil now, (Cant destroy)")
					end
				end)
			end



		self.heartBeat = game:GetService("RunService").Heartbeat
		local connection

		connection = game:GetService("RunService").Heartbeat:Connect(function()
	
					self.Unit = self.Unit or .75
			
					local hit, RayPosition, Normal = Cast(bloodDrop.Position, bloodDrop.Velocity.Unit*self.Unit)
					

					if hit then  		
				spawn(function()
					pcall(function()
						self.hit = hit -- get the hitted part
						self.Size = self.Size or 1 -- size of blood floor u choose in args
				game.Debris:AddItem(bloodDrop,5)
						local bloodfloorcf = (CFrame.new(RayPosition, RayPosition - Normal)) * CFrame.new(0, 0/2,0) -- set bloodfloor cf
						local bloodfloor = script:WaitForChild("BloodFloor"):Clone() -- clone it (only found in real script because its inside it)

						bloodfloor.Parent = workspace
						bloodfloor.CFrame = bloodfloorcf -- set blod cframe
						bloodfloor.Color = self.BloodColor --s et its color

						local tween = require( game:GetService("ReplicatedStorage"):WaitForChild("Tween") ) -- another module scirpt i made it just returns a normal tween service

						tween:Create(bloodfloor,1.5,"Cubic",{Size = Vector3.new(4.158, 4.217, .24) * self.Size})
						self.destroybloodfloor = function()
							spawn(function()

								wait(destroyTime2)
								tween:Create(bloodfloor,1.5,"Circular",{Size =Vector3.new(0,0,0)})
								game.Debris:AddItem(bloodfloor,1.5)

							end)

						end
						warn(self and "Blood floor added")
						self.destroybloodfloor()
						wait()

					end)

				end)
					end


			end)


			self.DestroyTime = destroyTime or 6
			self.destroy()
			warn(self.Target.Name.." is bleeding.") -- to check if everything is working

		end

	
	loops.Loop = true
end

function module:BloodDrop(properties)
	pcall(function()
		function self.checkForFolder()

			if properties then

				local folder = game.Workspace:FindFirstChild("BloodDrops") or Instance.new("Folder")
				folder.Parent = game.Workspace
				folder.Name = "BloodDrops"

				self = properties
				return self
			else

				self = "You didnt add properties."
				return self
			end
		end

		if properties.Target ~= nil then

			self = self.checkForFolder()

			if type(self) == "string" then
				warn(self or "You didnt add properties.")

			else
				warn("Starting to add blood.")
				self.Target = properties.Target
				bloodDrops.addDrops(self)
			end
		else

			self = self
			return
		end
	end)

end


return module
